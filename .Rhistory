library("Rcpp")
Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = "/home/fabian/Desktop/CVOCcreate/functions.R",
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = "/home/fabian/Desktop/CVOCcreate/functions.R",
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
install.packages("roxygen2")
?roxygen2::roxygenise
oc <- c(1,3,0.5)
class <- factor(c(rep(0, 25), rep(1, 25)), labels=c("neg", "pos"))
data <- as.data.frame(c(rnorm(25, 0, 1/2), rnorm(25, 1, 2)))
oc <- c(1,3,0.5)
class <- factor(c(rep(0, 25), rep(1, 25)), labels=c("neg", "pos"))
data <- as.data.frame(c(rnorm(25, 0, 1/2), rnorm(25, 1, 2)))
ebc(class, data, oc, positive="pos", p.val=TRUE)
ebc <- function(class, data, oc=c(1,1,0.5), positive=levels(class)[1], robust=FALSE,  p.val=FALSE, adj.method="BH") {
p <- ifelse(class(data)=="numeric", 1, ncol(data))
n <- length(class)
pos <- class==positive
neg <- !pos
if (nlevels(factor(class))!=2) stop("class must consist of two groups")
if (class(data)=="numeric") data <- as.data.frame(data)
if (dim(data)[1] != length(class)) stop("class and data do not correspond.")
if (!positive%in%levels(class)) stop("positive class doesn't exist.")
if (length(oc)!=3 | oc[3]<0 | oc[3]>1 | oc[1]<0 | oc[2]<0) stop("oc does not meet requirements.")
epe <- vector(mode="numeric", length=p)
names(epe) <- colnames(data)
p.value <- vector(length=length(epe))
for (i in 1:p) {
mu1 <- ifelse(robust, median(data[pos,i], na.rm=TRUE), mean(data[pos,i], na.rm=TRUE))
mu0 <- ifelse(robust, median(data[neg,i], na.rm=TRUE), mean(data[neg,i], na.rm=TRUE))
sigma1 <- ifelse(robust, mad(data[pos,i], na.rm=TRUE), sd(data[pos,i], na.rm=TRUE))
sigma0 <- ifelse(robust, mad(data[neg,i], na.rm=TRUE), sd(data[neg,i], na.rm=TRUE))
if (sigma1==0) sigma1 <- 0.00000000000001
if (sigma0==0) sigma0 <- 0.00000000000001
if (sigma0==sigma1){
sigma <- ifelse(robust, mad(data[,i], na.rm=TRUE), sd(data[,i], na.rm=TRUE))
x <- -( (mu0^2-mu1^2)/(2*sigma^2) - log(oc[1]/oc[2]*oc[3]/(1-oc[3])) ) / ((mu1-mu0)/sigma^2)
epe[i] <- ifelse( mu0 < mu1, 	oc[3]*oc[1]*(1-pnorm(x, mu0, sigma)) + (1-oc[3])*oc[2]*pnorm(x, mu1, sigma),
oc[3]*oc[1]*pnorm(x, mu0, sigma)+ (1-oc[3])*oc[2]*(1-pnorm(x, mu1, sigma)))
} else {
if (mu0 < mu1) {
xm <- roots(mu0, mu1, sigma0, sigma1, oc[1], oc[2], oc[3])[2]
xa <- roots(mu0, mu1, sigma0, sigma1, oc[1], oc[2], oc[3])[1]
if (is.na(xm)) { epe[i] <- (min((1-oc[3])*oc[2], oc[3]*oc[1]))
} else {
epe[i] <- ifelse (sigma0 < sigma1, 	oc[3] * oc[1] * (1-pnorm(xm, mu0, sigma0) + pnorm(xa, mu0, sigma0))+ (1-oc[3]) * oc[2] * (pnorm(xm, mu1, sigma1)- pnorm(xa, mu1, sigma1)),
oc[3] * oc[1] * (pnorm(xa, mu0, sigma0) - pnorm(xm, mu0, sigma0)) + (1-oc[3]) * oc[2] * (1-pnorm(xa, mu1, sigma1) + pnorm(xm, mu1, sigma1)))
}
} else {
xm <- roots(mu0, mu1, sigma0, sigma1, oc[1], oc[2], oc[3])[1]
xa <- roots(mu0, mu1, sigma0, sigma1, oc[1], oc[2], oc[3])[2]
if (is.na(xm)) { epe[i] <- (min((1-oc[3])*oc[2], oc[3]*oc[1]))
} else {
epe[i] <- ifelse (sigma0 < sigma1, 	oc[3] * oc[1] * (1-pnorm(xa, mu0, sigma0) + pnorm(xm, mu0, sigma0))+ (1-oc[3]) * oc[2] * (pnorm(xa, mu1, sigma1)- pnorm(xm, mu1, sigma1)),
oc[3] * oc[1] * (pnorm(xm, mu0, sigma0) - pnorm(xa, mu0, sigma0)) + (1-oc[3]) * oc[2] * (1-pnorm(xm, mu1, sigma1) + pnorm(xa, mu1, sigma1)))
}
}
if (sigma0==0 | sigma1==0) {epe[i] <- NA}
if (is.na(xm)) { epe[i] <- (min((1-oc[3])*oc[2], oc[3]*oc[1]))}
}
}
# generate p-values
if (p.val) {
reps <- 100000
data.h0 <- matrix(ncol=reps, nrow=length(class))
for (j in 1:reps) {data.h0[,j] <- rnorm(length(class))}
distr.h0 <- ebc(class, data.h0, oc, positive=positive)$ebc
for (j in 1:ncol(data)) p.value[j] <- sum(distr.h0 <= epe[j])/reps
} else { p.value <- NULL }
return(list("ebc"=epe, "p.value"=p.value, "adj.p.value"=p.adjust(p.value, method=adj.method)))
}
#--------------------------------------------------------------------------------------------------------
roots <- function(mu0, mu1, sigma0, sigma1, c0, c1, pi0) {
a <- 1/(2*sigma0^2) - 1/(2*sigma1^2)
b <- mu1/sigma1^2 - mu0/sigma0^2
c <- mu0^2/(2*sigma0^2) - mu1^2/(2*sigma1^2) + log(sigma0/sigma1) - log(pi0/(1-pi0)*c0/c1)
if (b^2 - 4*a*c >= 0) { return(c((-b - sqrt(b^2 - 4*a*c)) / (2*a), (-b + sqrt(b^2 - 4*a*c)) / (2*a)))
} else {return(c(NA, NA))}
}
ebc(class, data, oc, positive="pos", p.val=TRUE)
data <- data.frame("var1"=c(rnorm(25, 0, 1/2), rnorm(25, 1, 2)))
res <- ebc(class, data, oc, positive="pos", p.val=TRUE)
res
?roxygenise
library("roxygenize")
library("roxygenise")
library("roxygen2")
?roxygenise
roxygenise(functions.R)
?roxygenize
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/", load_code="functions.R")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/", roclets="functions.R")
roxygenise(package.dir=".", roclets="functions.R")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="functions.R")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="ebc.R")
vignette("rd", package="roxygen2")
roxygenise("ebc")
ls
getwd()
setwd("/home/fabian/Desktop/CVOCcreate/CVOC")
roxygenise("ebc")
roxygenise("ebc.r")
roxygenise("ebc.R")
getwd
getwd()
setwd("home/fabian/Desktop/CVOCcreate")
setwd("/home/fabian/Desktop/CVOCcreate")
roxygenise("ebc")
roxygenise("ebc.R")
getwd()
?roxygenise
roxygenise(roclets="rd")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC/", roclets="rd")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC/", roclets="rd")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC/", roclets="rd")
Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = c("/home/fabian/Desktop/CVOCcreate/ebc.R",
"/home/fabian/Desktop/CVOCcreate/ebc.R"),
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = c("/home/fabian/Desktop/CVOCcreate/ebc.R",
"/home/fabian/Desktop/CVOCcreate/etc.R"),
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = c("/home/fabian/Desktop/CVOCcreate/ebc.R",
"/home/fabian/Desktop/CVOCcreate/etc.R"
"/home/fabian/Desktop/CVOCcreate/CVOC.R"),
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = c("/home/fabian/Desktop/CVOCcreate/ebc.R",
"/home/fabian/Desktop/CVOCcreate/etc.R",
"/home/fabian/Desktop/CVOCcreate/CVOC.R"),
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = c("/home/fabian/Desktop/CVOCcreate/ebc.R",
"/home/fabian/Desktop/CVOCcreate/etc.R",
"/home/fabian/Desktop/CVOCcreate/roots.R",
"/home/fabian/Desktop/CVOCcreate/etcND.R",
"/home/fabian/Desktop/CVOCcreate/countPerm.R",
"/home/fabian/Desktop/CVOCcreate/CVOC.R"),
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = c("/home/fabian/Desktop/CVOCcreate/ebc.R",
"/home/fabian/Desktop/CVOCcreate/etc.R",
"/home/fabian/Desktop/CVOCcreate/roots.R",
"/home/fabian/Desktop/CVOCcreate/etcND.R",
"/home/fabian/Desktop/CVOCcreate/countPerm.R",
"/home/fabian/Desktop/CVOCcreate/CVOC.R"),
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = c("/home/fabian/Desktop/CVOCcreate/ebc.R",
"/home/fabian/Desktop/CVOCcreate/etc.R",
"/home/fabian/Desktop/CVOCcreate/roots.R",
"/home/fabian/Desktop/CVOCcreate/etcND.R",
"/home/fabian/Desktop/CVOCcreate/countPerm.R"),#,
#"/home/fabian/Desktop/CVOCcreate/CVOC.R"),
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="namespace")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="namespace")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
?devtools::document
devtools::document(pkg="CVOC", roclets="rd")
devtools::document(pkg="CVOC")
Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = c("/home/fabian/Desktop/CVOCcreate/ebc.R",
"/home/fabian/Desktop/CVOCcreate/etc.R",
"/home/fabian/Desktop/CVOCcreate/roots.R",
"/home/fabian/Desktop/CVOCcreate/etcND.R",
"/home/fabian/Desktop/CVOCcreate/countPerm.R",
"/home/fabian/Desktop/CVOCcreate/CVOC.R"),
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = c("/home/fabian/Desktop/CVOCcreate/ebc.R",
"/home/fabian/Desktop/CVOCcreate/etc.R",
"/home/fabian/Desktop/CVOCcreate/roots.R",
"/home/fabian/Desktop/CVOCcreate/etcND.R",
"/home/fabian/Desktop/CVOCcreate/countPerm.R",
"/home/fabian/Desktop/CVOCcreate/CVOC.R"),
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = c("/home/fabian/Desktop/CVOCcreate/ebc.R",
"/home/fabian/Desktop/CVOCcreate/etc.R",
"/home/fabian/Desktop/CVOCcreate/roots.R",
"/home/fabian/Desktop/CVOCcreate/etcND.R",
"/home/fabian/Desktop/CVOCcreate/countPerm.R"),
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = c("/home/fabian/Desktop/CVOCcreate/ebc.R",
"/home/fabian/Desktop/CVOCcreate/etc.R",
"/home/fabian/Desktop/CVOCcreate/roots.R",
"/home/fabian/Desktop/CVOCcreate/etcND.R",
"/home/fabian/Desktop/CVOCcreate/countPerm.R"),
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="namespace")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="namespace")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets=c("namespace", "collate"))
Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = c("/home/fabian/Desktop/CVOCcreate/ebc.R",
"/home/fabian/Desktop/CVOCcreate/etc.R",
"/home/fabian/Desktop/CVOCcreate/roots.R",
"/home/fabian/Desktop/CVOCcreate/etcND.R",
"/home/fabian/Desktop/CVOCcreate/countPerm.R"),
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets=c("namespace", "collate"))
?roxygenise
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="namespace", clean=TRUE)
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="namespace", clean=TRUE)
devtools::document(pkg="CVOC")
Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = c("/home/fabian/Desktop/CVOCcreate/ebc.R",
"/home/fabian/Desktop/CVOCcreate/etc.R",
"/home/fabian/Desktop/CVOCcreate/roots.R",
"/home/fabian/Desktop/CVOCcreate/etcND.R",
"/home/fabian/Desktop/CVOCcreate/countPerm.R"),
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="rd", clean=TRUE)
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="namespace", clean=TRUE)
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="namespace", clean=TRUE)
library("RcppMP")
library("roxygen2")
Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = c("/home/fabian/Desktop/CVOCcreate/ebc.R",
"/home/fabian/Desktop/CVOCcreate/etc.R",
"/home/fabian/Desktop/CVOCcreate/roots.R",
"/home/fabian/Desktop/CVOCcreate/etcND.R",
"/home/fabian/Desktop/CVOCcreate/countPerm.R"),
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
library("Rcpp"); Rcpp.package.skeleton( name="CVOC",
author="Fabian Schroeder",
email="fabian.schroeder.fl@ait.ac.at",
license="GPL-2",
path="/home/fabian/Desktop/CVOCcreate/",
code_files = c("/home/fabian/Desktop/CVOCcreate/ebc.R",
"/home/fabian/Desktop/CVOCcreate/etc.R",
"/home/fabian/Desktop/CVOCcreate/roots.R",
"/home/fabian/Desktop/CVOCcreate/etcND.R",
"/home/fabian/Desktop/CVOCcreate/countPerm.R"),
cpp_files="/home/fabian/Desktop/CVOCcreate/etcND.cpp",
example_code=FALSE
)
?ldd
devtools::document(pkg="CVOC")
library("CVOC")
roxygenise(package.dir="/home/fabian/Desktop/CVOCcreate/CVOC", roclets="namespace")
Rcpp::sourceCpp('etcND.cpp')
library("RcppMP")
?`RcppMP-package`
library("CVOC")
?CVOC
?etc
